public class ManejoMulticast 
{
    private MulticastSocket socket_multicast;
    private DatagramPacket datagrama;
    private byte [] dato;
    private InetAddress grupo;
    
    public ManejoMulticast()
    {
        try {
            socket_multicast = new MulticastSocket();
            dato = new byte[0];
            grupo = InetAddress.getByName("231.0.0.1");
            datagrama =  new DatagramPacket(dato, 0, grupo, 10000);
            
        } catch (IOException ex) {
            System.out.println("error al crear el socket de multicast");
        }
        
    }
    
    /**
     * metodo recibe un mensaje que se quiere mandar por el datagrama
     * con él modifica el datagrama y retorna true cuando lo envie
     * y false si no lo envía
     * @param mensajeAMandar
     * @return 
     */
    public boolean enviarMensajeMulticast(String mensajeAMandar)
    {
        if(mensajeAMandar.isEmpty())
        {
            System.out.println("el mensaje estaba vacio");
            return false;
        }else
        {
            try
            {
                byte [] temporal = mensajeAMandar.getBytes();
                datagrama.setData(temporal);
                datagrama.setLength(temporal.length);
                socket_multicast.send(datagrama);
                return true;
            }catch(IOException ioe)
            {
                System.out.println("error al  mandar el datagrama");
                return false;
            }
            
        }
        
    }
    
    
}
